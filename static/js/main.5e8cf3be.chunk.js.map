{"version":3,"sources":["images/logo-white.svg","components/Header.js","utils/Api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","alt","src","MestoLogo","handleResponse","res","ok","json","Promise","reject","status","api","options","this","_baseUrl","baseUrl","_authorization","headers","authorization","fetch","method","then","name","about","body","JSON","stringify","link","cardId","avatar","Card","card","onCardClick","type","onClick","likes","length","Main","onEditAvatar","onEditProfile","onAddPlace","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getUserInfo","userData","getInitialCards","initialCards","map","info","_id","Footer","PopupWithForm","props","isOpen","id","onClose","noValidate","title","children","value","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isCardPopupOpen","setIsCardPopupOpen","selectedCard","setSelectedCard","closeAllPopups","placeholder","required","minLength","maxLength","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e8cf3be.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-white.bbe2a6ea.svg\";","import React from \"react\";\r\nimport '../index.css';\r\nimport MestoLogo from '../images/logo-white.svg';\r\n\r\nfunction Header() {\r\n    return(\r\n        <header className=\"header\">\r\n            <img className=\"logo\" alt=\"логотип Mesto\" src={MestoLogo}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","const handleResponse = (res) => {\r\n  if (!res.ok) {\r\n    return Promise.reject(`Error: ${res.status}`);\r\n  }\r\n  return res.json();\r\n}\r\nclass Api {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this._authorization = options.headers.authorization;\r\n  }\r\n  getUserInfo() {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: `${this._authorization}`\r\n      }\r\n    })\r\n      .then(handleResponse)\r\n  }\r\n  getInitialCards() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: `${this._authorization}`\r\n      }\r\n    })\r\n      .then(handleResponse)\r\n  }\r\n  editProfile({name, about}) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: `${this._authorization}`,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: about\r\n      })\r\n    })\r\n      .then(handleResponse)\r\n  }\r\n  addNewCard({name, link}) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: `${this._authorization}`,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link\r\n      })\r\n    })\r\n      .then(handleResponse)\r\n  }\r\n  deleteCard(cardId){\r\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: `${this._authorization}`\r\n      }\r\n    })\r\n      .then(handleResponse)\r\n  }\r\n  putLike(cardId){\r\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        authorization: `${this._authorization}`\r\n      }\r\n    })\r\n      .then(handleResponse)\r\n  }\r\n  deleteLike(cardId){\r\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: `${this._authorization}`\r\n      }\r\n    })\r\n      .then(handleResponse)\r\n  }\r\n  changeAvatar({avatar}){\r\n    return fetch(`${this._baseUrl}/users/me/avatar`,{\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: `${this._authorization}`,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: avatar\r\n      })\r\n    })\r\n      .then(handleResponse)\r\n  }\r\n}\r\nexport const api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-22',\r\n  headers: {\r\n    authorization: '67fb5242-644a-424c-b1b4-e82b266c66c5'\r\n  }\r\n});\r\n","import React from \"react\";\r\nimport '../index.css';\r\n\r\nfunction Card({card, onCardClick}) {\r\n    function handleClick() {\r\n        onCardClick(card);\r\n    }\r\n    return (\r\n        <div className=\"card\">\r\n            <button type=\"button\" className=\"card__icon-delete\"/>\r\n            <img className=\"card__image\" onClick={handleClick} alt={card.name} src={card.link}/>\r\n            <div className=\"card__description\">\r\n                <h2 className=\"card__title\">{card.name}</h2>\r\n                <div className=\"card__like-wrapper\">\r\n                    <button type=\"button\" className=\"card__icon-like\"/>\r\n                    <p className=\"card__count-likes\">{card.likes.length}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport '../index.css';\r\nimport {api} from '../utils/Api.js'\r\nimport Card from \"./Card\";\r\n\r\nfunction Main({onEditAvatar, onEditProfile, onAddPlace, onCardClick}) {\r\n    const [userName, setUserName] = React.useState('Загрузка...');\r\n    const [userDescription, setUserDescription] = React.useState('');\r\n    const [userAvatar, setUserAvatar] = React.useState('');\r\n    const [cards, setCards] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        api.getUserInfo()\r\n            .then(userData => {\r\n                setUserName(userData.name);\r\n                setUserDescription(userData.about);\r\n                setUserAvatar(userData.avatar);\r\n            })\r\n    }, [])\r\n    React.useEffect(() => {\r\n        api.getInitialCards()\r\n            .then(initialCards => {\r\n                setCards(initialCards.map(info => (\r\n                    <Card key={info._id} card={info} onCardClick={onCardClick} />\r\n                )))\r\n            })\r\n    }, [])\r\n    return (\r\n        <main>\r\n            <section className=\"profile\">\r\n                <div className=\"profile__avatar-container\">\r\n                    <img className=\"profile__photo\" alt=\"фото в профиле\" src={userAvatar}/>\r\n                    <div onClick={onEditAvatar} className=\"profile__avatar-overlay\"/>\r\n                </div>\r\n                <div className=\"profile__intro\">\r\n                    <div className=\"profile__name-and-button\">\r\n                        <h1 className=\"profile__name\">{userName}</h1>\r\n                        <button onClick={onEditProfile} type=\"button\" className=\"profile__edit-button\"/>\r\n                    </div>\r\n                    <p className=\"profile__description\">{userDescription}</p>\r\n                </div>\r\n                <button onClick={onAddPlace} type=\"button\" className=\"profile__add-button\"/>\r\n            </section>\r\n\r\n            <section className=\"cards\">\r\n                {cards}\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport '../index.css';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__text\">© 2020 Mesto Russia</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport '../index.css';\r\n\r\nfunction PopupWithForm (props) {\r\n    return(\r\n        <section className={props.isOpen?'popup popup_opened':'popup'} id={`popup__${props.name}`}>\r\n            <div className=\"popup__container\">\r\n                <button onClick={props.onClose} type=\"button\" className=\"popup__icon-close popup__icon-close-edit-form\"/>\r\n                <form className={`form ${props.name}-form`} name={`profile-${props.name}-form`} noValidate>\r\n                    <h2 className=\"form__header\">{props.title}</h2>\r\n                    {props.children}\r\n                    <input type=\"submit\" className={`form__button ${props.name}-form__submit-button`} value=\"Сохранить\"/>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm;","import React from \"react\";\r\nimport '../index.css';\r\n\r\nfunction ImagePopup({isOpen, onClose, card}){\r\n    return(\r\n        <section className={`popup ${isOpen ? \"popup_opened\" : \"\"}`} id=\"popup__photo\">\r\n            <div className=\"popup__container\">\r\n                <button type=\"button\" onClick={onClose} className=\"popup__icon-close popup__icon-close-photo\"/>\r\n                <img className=\"popup__photo\" alt={card.name} src={card.link}/>\r\n                <p className=\"popup__description\">{card.name}</p>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ImagePopup;","import React from \"react\";\r\nimport '../index.css';\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport ImagePopup from \"./ImagePopup\";\r\n\r\nfunction App() {\r\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen]=React.useState(false);\r\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen]=React.useState(false);\r\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen]=React.useState(false);\r\n    const [isCardPopupOpen, setIsCardPopupOpen]=React.useState(false);\r\n    const [selectedCard, setSelectedCard]=React.useState({});\r\n    const handleEditAvatarClick = () => {\r\n        setIsEditAvatarPopupOpen(true);\r\n    }\r\n    const handleEditProfileClick = () => {\r\n        setIsEditProfilePopupOpen(true);\r\n    }\r\n    const handleAddPlaceClick = () => {\r\n        setIsAddPlacePopupOpen(true);\r\n    }\r\n    const closeAllPopups = () => {\r\n        setIsEditAvatarPopupOpen(false);\r\n        setIsEditProfilePopupOpen(false);\r\n        setIsAddPlacePopupOpen(false);\r\n        setIsCardPopupOpen(false)\r\n    }\r\n    function handleCardClick(card) {\r\n        setIsCardPopupOpen(true);\r\n        setSelectedCard({\r\n            link: card.link,\r\n            name: card.name,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <Header />\r\n            <Main\r\n                onEditAvatar={handleEditAvatarClick}\r\n                onEditProfile={handleEditProfileClick}\r\n                onAddPlace={handleAddPlaceClick}\r\n                onCardClick={handleCardClick}\r\n            />\r\n            <Footer />\r\n            <PopupWithForm title={'Редактировать профиль'}\r\n                           isOpen={isEditProfilePopupOpen}\r\n                           onClose={closeAllPopups}\r\n                           name={'edit'}>\r\n                <fieldset className=\"form__profile-info\">\r\n                    <input className=\"form__input form__input_data_heading\" type=\"text\" placeholder=\"Имя\"\r\n                           name=\"name\" id=\"name-input\" required minLength=\"2\" maxLength=\"40\"/>\r\n                    <span className=\"form__error name-input-error\"/>\r\n                    <input className=\"form__input form__input_data_description\" type=\"text\"\r\n                           placeholder=\"О себе\"\r\n                           name=\"about\" id=\"job-input\" required minLength=\"2\" maxLength=\"200\"/>\r\n                    <span className=\"form__error job-input-error\"/>\r\n                </fieldset>\r\n            </PopupWithForm>\r\n            <PopupWithForm title={'Новое место'}\r\n                           isOpen={isAddPlacePopupOpen}\r\n                           onClose={closeAllPopups}\r\n                           name={'add'}>\r\n                <fieldset className=\"form__profile-info\">\r\n                    <input className=\"form__input form__input_card_heading\" type=\"text\" placeholder=\"Название\"\r\n                           name=\"name\" id=\"card-head-input\" required minLength=\"2\" maxLength=\"30\"/>\r\n                    <span className=\"form__error card-head-input-error\"/>\r\n                    <input className=\"form__input form__input_card_link\" type=\"url\"\r\n                           placeholder=\"Ссылка на картинку\"\r\n                           name=\"link\" id=\"card-link-input\" required/>\r\n                    <span className=\"form__error card-link-input-error\"/>\r\n                </fieldset>\r\n            </PopupWithForm>\r\n            <PopupWithForm title={'Обновить аватар'}\r\n                           isOpen={isEditAvatarPopupOpen}\r\n                           onClose={closeAllPopups}\r\n                           name={'avatar'}>\r\n                <fieldset className=\"form__profile-info\">\r\n                    <input className=\"form__input form__input_avatar_url\" type=\"url\"\r\n                           placeholder=\"Ссылка на аватар\"\r\n                           name=\"avatar\" id=\"avatar-url-input\" required/>\r\n                    <span className=\"form__error avatar-url-input-error\"/>\r\n                </fieldset>\r\n            </PopupWithForm>\r\n            <PopupWithForm title={'Вы уверены?'} name={'delete'}/>\r\n            <ImagePopup isOpen={isCardPopupOpen}\r\n                        card={selectedCard}\r\n                        onClose={closeAllPopups}\r\n            />\r\n           {/*\r\n            <section className=\"popup \" id=\"popup__delete\">\r\n                <div className=\"popup__container\">\r\n                    <button type=\"button\" className=\"popup__icon-close popup__icon-close-delete-form\"/>\r\n                    <form className=\"form delete-form\" name=\"delete-form\" noValidate>\r\n                        <h2 className=\"form__header\">Вы уверены?</h2>\r\n                        <input type=\"submit\" className=\"form__button\" value=\"Да\"/>\r\n                    </form>\r\n                </div>\r\n            </section>*/}\r\n        </div>\r\n);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}